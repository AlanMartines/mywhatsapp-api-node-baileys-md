
## Acessar bash do container
# docker exec -it <container id> /bin/sh
# docker exec -it <container id> /bin/bash

## Logs do container
# docker logs -f --tail 1000 ApiBaileysMd

## Removendo todos os containers e imagens de uma só vez
# docker rm $(docker ps -qa)

## Removendo todas as imagens de uma só vez
# docker rmi $(docker images -aq)

## Removendo imagens
# docker rmi <REPOSITORY>
# docker rmi <IMAGE ID>

## Como obter o endereço IP de um contêiner Docker do host
# https://stack.desenvolvedor.expert/appendix/docker/rede.html
# docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' <IMAGE ID>

# Criar um contêiner
# docker compose -f docker-compose.yml up --build -d

version: "3.9"

services:

  backend:
    container_name: ${HOST_NAME:-'ApiBaileysMd'}
    hostname: ${HOST_NAME:-'ApiBaileysMd'}
    network_mode: bridge
    image: alanmartines/mywhatsapp-api-node-baileys-md:${TAG}
    build:
      context: .
      dockerfile: Dockerfile.backend
    restart: unless-stopped
    env_file: .env
    volumes:
      - .:/home/ApiBaileysMd:rw
      - ${PATCH_TOKENS:-/usr/local/tokensHomologacao}:/usr/local/tokens:rw
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - ${PORT:-1000}:9001
    expose:
      - ${PORT:-9001}

#    logging:
#      driver: gelf
#      options:
#        gelf-address: "udp://${GRAYLOGSERVER:-127.0.0.1}:${GRAYLOGPORT:-12201}"